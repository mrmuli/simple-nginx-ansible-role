
user {{ nginx_default_user }};
pid  {{ nginx_pid }};

events {
        worker_connections   {{ set_worker_connections }};
        # multi_accept on;
}


http{
    # basic settings
    
    # Async I/O 
    sendfile on;

    keepalive_requests: {{ keepalive_requests }};
    keepalive_timeout: {{ keepalive_timeout }};

    # log info
    access_log {{ access_log_dir }}
    error_log {{ error_log_dir }}


    upstream {{ upstream_address }} {
    {{ proxy_algorithm }};
    server {{ upstream_address_1 }}:{{ service_port }} max_fails={{ max_fails }} fail_timeout={{ fail_timeout }};
    server {{ upstream_address_2 }}:{{ service_port }} max_fails={{ max_fails }} fail_timeout={{ fail_timeout }};
    }

    map $request_method $cors_method {
        OPTIONS 11;
        GET 1;
        POST 1;
        default 0;
    }

    server {
        listen {{ service_port }} ssl;   #v4
        listen [:::]:{{ service_port }} ssl; #v6

        servername              {{ server_name }}
        ssl_protocol:           {{ tls_version }};
        ssl_certificate:        {{ ssl_cert_path }}
        ssl_certificate_key:    {{ ssl_cert_key }}
        ssl_session_cache:      {{ ssl_session_cache }}
        ssl_session_timeout:    {{ ssl_session_timeout }};

        location {{ request_uri }} {
            if ($cors_method ~ '1'){
                add_header 'Access-Control-Allow-Methods'
                    GET,POST,OPTIONS;
                add_header 'Access-Control-Allow-Origin'
                    '*.com'
            }
            if ($cors_method ~ '11'){
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            proxy_pass  http://{{ upstream_address }};
            proxy_ssl_verify        on;
            proxy_ssl_verify_depth  {{ upstream_ssl_depth }};
            proxy_ssl_protocols     {{ tls_version }};

            # uncomment this out if you need to resrict access to specific ip ranges
            # allow       {{ ip_range }}; # eg 10.0.0.0/20
            # deny        all;

        }
    }
}